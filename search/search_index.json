{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"As Built Report As Built Report is an open source configuration document framework which utilises Microsoft PowerShell to produce as-built documentation in multiple document formats for multiple vendors and technologies. The framework allows users to easily generate clear and consistent documentation, for any environment which supports Microsoft PowerShell and/or a RESTful API. Features Multiple Document Formats Granular Detail Level Customised Styling Generate and output reports in one or more document formats, including DOCX, HTML, and Text. Configure the detail level for each section of a report. You have the choice of producing a summarised report, a fully comprehensive report or something in between. Use a default style or create your own to match your corporate identity. Set page orientation, text and table formatting with fonts, colours, borders and highlighted cells and rows. Modular Design Health Checks Email Reports Install and update the entire report library or each report individually, via the PowerShell Gallery. Enable health checks to highlight configuration issues within a report. Toggle individual health checks on or off as required. Attach and send reports via email to one or more recipients. As Built Report provides the following features; Modular design enables contributors a simple way to develop new reports. Install and update the entire report library or each report individually, via the PowerShell Gallery. Generate and output reports in one or more document formats, including DOCX, HTML, and Text. Configure the detail level for each section of a report. You have the choice of producing a summarised report, a fully comprehensive report or something in between. Support for custom styling. Set page orientation, text and table formatting with fonts, colours, borders and highlighted cells and rows. Enable health checks to highlight configuration issues within a report. Toggle individual health checks on or off as required. Append the time and date to reports to maintain records. Attach and send reports via email to one or more recipients. Components As Built Report Configuration Reports Configuration A JSON configuration file used to store information relating to author\u2019s name, company information & SMTP mail server configuration. Individual configuration files can be saved and specified also. The report configuration is a JSON file which stores information specific to the related report. It holds information such as the report name, version, and release status. The report configuration can also provide functionality such as configurable report options, health checks and granular information levels. Reports Module Styles Script (.ps1) The report module is specific to each vendor and/or technology and is used to extract information from the specific environment. The report module will be written to utilise PowerShell modules or RESTful APIs which the vendor/technology provides. The styles script sets the default layout, fonts, colours and sizes used within the report. Style scripts can be used to layout cover pages, table of contents and other unique tables or sections. Report Modules Click each vendor logo to view available report modules and associated documentation.","title":"Home"},{"location":"#features","text":"Multiple Document Formats Granular Detail Level Customised Styling Generate and output reports in one or more document formats, including DOCX, HTML, and Text. Configure the detail level for each section of a report. You have the choice of producing a summarised report, a fully comprehensive report or something in between. Use a default style or create your own to match your corporate identity. Set page orientation, text and table formatting with fonts, colours, borders and highlighted cells and rows. Modular Design Health Checks Email Reports Install and update the entire report library or each report individually, via the PowerShell Gallery. Enable health checks to highlight configuration issues within a report. Toggle individual health checks on or off as required. Attach and send reports via email to one or more recipients. As Built Report provides the following features; Modular design enables contributors a simple way to develop new reports. Install and update the entire report library or each report individually, via the PowerShell Gallery. Generate and output reports in one or more document formats, including DOCX, HTML, and Text. Configure the detail level for each section of a report. You have the choice of producing a summarised report, a fully comprehensive report or something in between. Support for custom styling. Set page orientation, text and table formatting with fonts, colours, borders and highlighted cells and rows. Enable health checks to highlight configuration issues within a report. Toggle individual health checks on or off as required. Append the time and date to reports to maintain records. Attach and send reports via email to one or more recipients.","title":"Features"},{"location":"#components","text":"As Built Report Configuration Reports Configuration A JSON configuration file used to store information relating to author\u2019s name, company information & SMTP mail server configuration. Individual configuration files can be saved and specified also. The report configuration is a JSON file which stores information specific to the related report. It holds information such as the report name, version, and release status. The report configuration can also provide functionality such as configurable report options, health checks and granular information levels. Reports Module Styles Script (.ps1) The report module is specific to each vendor and/or technology and is used to extract information from the specific environment. The report module will be written to utilise PowerShell modules or RESTful APIs which the vendor/technology provides. The styles script sets the default layout, fonts, colours and sizes used within the report. Style scripts can be used to layout cover pages, table of contents and other unique tables or sections.","title":"Components"},{"location":"#report-modules","text":"Click each vendor logo to view available report modules and associated documentation.","title":"Report Modules"},{"location":"getting-started/","text":"To start using As Built Report, you will need to perform the following; Check the version of PowerShell you are running; Open a PowerShell console; PowerShell $PSVersionTable Check report module system requirements; Install any report module pre-requisites. Example Install-Module -Name 'VMware.PowerCLI' Install-Module -Name 'PureStoragePowerShellSDK' For an online installation, install AsBuiltReport report modules using the PowerShell Gallery ; To install individual report modules; PowerShell Find-Module -Name 'AsBuiltReport.*' -Repository 'PSGallery' Install-Module -Name 'AsBuiltReport.<Vendor>.<Product>' Example Install-Module -Name 'AsBuiltReport.VMware.vSphere' For an offline installation, perform the following steps from a machine with internet connectivity; Save the required modules to a specified folder. PowerShell Save-Module -Name 'AsBuiltReport.VMware.vSphere' -Path 'C:\\Path\\To\\Specified\\Folder' Copy the downloaded PowerShell module folders to a location that can be made accessible to the offline system. e.g. USB Flash Drive, Internal File Share etc. On the offline system, open a PowerShell command window and run the following command to determine the PowerShell module path. PowerShell $env:PSModulePath -Split ';' Copy the downloaded PowerShell module folders to a folder specified in the $env:PSModulePath output.","title":"Getting Started"},{"location":"about/","text":"Coming soon","title":"About"},{"location":"about/acknowledgements/","text":"Tim Carman Project Creator & Lead Developer Twitter - @tpcarman GitHub - @tpcarman Matt Allford Project Advocate & Contributor Twitter - @mattallford GitHub - @mattallford Iain Brighton PScribo Creator & Lead Developer Twitter - @iainbrighton GitHub - @iainbrighton Jonathan Colon Project Contributor Twitter - @jcolonfzenpr GitHub - @rebelinux","title":"Acknowledgements"},{"location":"about/acknowledgements/#tim-carman","text":"","title":"Tim Carman"},{"location":"about/acknowledgements/#matt-allford","text":"","title":"Matt Allford"},{"location":"about/acknowledgements/#iain-brighton","text":"","title":"Iain Brighton"},{"location":"about/acknowledgements/#jonathan-colon","text":"","title":"Jonathan Colon"},{"location":"about/contact/","text":"Contact Us Email - support@asbuiltreport.com Follow Us Twitter - @AsBuiltReport GitHub - @AsBuiltReport YouTube - @AsBuiltReport VMware {code} Slack - #AsBuiltReport","title":"Contact"},{"location":"about/contact/#contact-us","text":"Email - support@asbuiltreport.com","title":"Contact Us"},{"location":"about/contact/#follow-us","text":"Twitter - @AsBuiltReport GitHub - @AsBuiltReport YouTube - @AsBuiltReport VMware {code} Slack - #AsBuiltReport","title":"Follow Us"},{"location":"dev-guide/","text":"Coming soon","title":"Developer Guide"},{"location":"dev-guide/contributing/","text":"This page is currently under development. In the meantime, if you are interested in contributing to this project, please contact us so that we can provide you with more information.","title":"Contributing"},{"location":"dev-guide/creating-a-report/","text":"Coming soon","title":"Creating a report"},{"location":"support/","text":"Coming soon","title":"Support"},{"location":"support/donate/","text":"Any donation to support this project is greatly appreciated. Thank you! \u2764\ufe0f Buy Me a Coffee","title":"Donate"},{"location":"support/faq/","text":"What is AsBuiltReport? As Built Report is an open source configuration document framework which utilises Microsoft PowerShell to produce as-built documentation in multiple document formats for multiple vendors and technologies. The framework allows users to easily generate clear and consistent documentation, for any environment which supports Microsoft PowerShell and/or a RESTful API. What versions of PowerShell are supported? AsBuiltReport will generally support both Windows PowerShell 5.1 and PowerShell 7, however each individual report will have its own system requirements. Please refer to the report module documentation page for its PowerShell compatibility and system requirements. What document formats are supported? DOCX (MS Word), HTML & Text are all supported document formats. Do I need Microsoft Word installed to generate a report in DOCX format? No. Microsoft Word is not required to generate the report, however a document viewer which supports the DOCX format would be required to view the report. How do I install AsBuiltReport if I do not have access to PowerShell Gallery? Please refer to the getting started page for instructions on how to perform an offline installation of AsBuiltReport. How can I contribute to the project? Please refer to the contributing page. How can I donate to the project? Please refer to the donate page. How can I provide feedback or ask for help? Please refer to the contact page.","title":"FAQ"},{"location":"user-guide/","text":"Coming soon","title":"User Guide"},{"location":"user-guide/new-asbuiltconfig/","text":"Description New-AsBuiltConfig starts a menu-driven procedure in the PowerShell console asking the user a series of questions to create a JSON configuration file. The JSON configuration file may be saved and referenced by the AsBuiltConfigPath parameter in New-AsBuiltReport . New-AsBuiltConfig is automatically called by New-AsBuiltReport if the AsBuiltConfigPath parameter is not specified. If a user wishes to generate a new As Built Report configuration without generating a new report, this command can be called as a standalone cmdlet. Parameters There are no additional parameters for this command.","title":"New-AsBuiltConfig"},{"location":"user-guide/new-asbuiltconfig/#description","text":"New-AsBuiltConfig starts a menu-driven procedure in the PowerShell console asking the user a series of questions to create a JSON configuration file. The JSON configuration file may be saved and referenced by the AsBuiltConfigPath parameter in New-AsBuiltReport . New-AsBuiltConfig is automatically called by New-AsBuiltReport if the AsBuiltConfigPath parameter is not specified. If a user wishes to generate a new As Built Report configuration without generating a new report, this command can be called as a standalone cmdlet.","title":"Description"},{"location":"user-guide/new-asbuiltconfig/#parameters","text":"There are no additional parameters for this command.","title":"Parameters"},{"location":"user-guide/new-asbuiltreport/","text":"Description New-AsBuiltReport creates as-built configuration reports for one or more target systems and exports the report in to one or more supported document formats, such as DOCX, HTML and Text. New-AsBuiltReport provides additional parameters, allowing users to generate and customise a report to their requirements. Parameters Report Specifies the type of report that will be generated. This is a mandatory parameter. Target Specifies the IP/FQDN of the system to connect. This is a mandatory parameter. Credential Specifies the stored credential of the target system. This is a mandatory parameter. Username Specifies the username of the target system. This is a mandatory parameter. Password Specifies the password of the target system. This is a mandatory parameter. Token Specifies an API token to authenticate to the target system. This is an optional parameter. MFA Use multifactor authentication to authenticate to the target system. This is an optional parameter. Format Specifies the output format of the report. The supported output formats are Word, HTML & Text. Multiple output formats may be specified, separated by a comma. This is an optional parameter. If the parameter is not specified, the document format will default to Word. Orientation Sets the page orientation of the report to Portrait or Landscape. This is an optional parameter. If the parameter is not specified, page orientation will be set to Portrait. StyleFilePath Specifies the file path to a custom style .ps1 script for the report to use. This is an optional parameter and does not have a default value. OutputFolderPath Specifies the folder path to save the report. This is a mandatory parameter. AsBuiltConfigFilePath Specifies the file path to the As Built Report configuration JSON file. This is an optional parameter. If this parameter is not specified, the user will be prompted for this configuration information on first run, with the option to save the configuration to a file. ReportConfigFilePath Specifies the file path to a report JSON configuration file. This is an optional parameter. If this parameter is not specified, a default report configuration JSON is copied to the specified user folder. If this parameter is specified and the path to a JSON file is invalid, the script will terminate. Timestamp Specifies whether to append a timestamp string to the report filename. This is an optional parameter. By default, the timestamp string is not added to the report filename. EnableHealthcheck Highlights certain issues within the system report. Some reports may not provide this functionality. This is an optional parameter. If the parameter is not specified, health checks are not enabled. SendEmail Sends report to specified recipients as email attachments. This is an optional parameter. Examples Creates an as-built report for a VMware vSphere environment. The report is generated in Word and Text formats and saved to the C:\\Reports folder. Health checks will be enabled. PowerShell New-AsBuiltReport -Report 'VMware.vSphere' -Target 'vcenter.domain.local' -Username 'administrator@vsphere.local' -Password 'VMware1!' -Format 'Word' , 'Text' -OutputFolderPath 'C:\\Reports' -EnableHealthCheck Creates an as-built report for two Pure Storage FlashArrays. The report is generated in HTML format, saved to the C:\\Reports folder and sent via email. PowerShell New-AsBuiltReport -Report 'PureStorage.FlashArray' -Target '192.168.10.100' , '192.168.10.110' -Credential ( Get-Credential ) -Format 'HTML' -OutputFolderPath 'C:\\Reports' -SendEmail Creates an as-built report for two VMware ESXi hosts. Authentication to VMware ESXi uses stored credentials. The report is generated in Word (DOCX) format (by default). A customized stylesheet is specified to style the report in the company\u2019s brand colours and fonts. The report is saved to the user\u2019s documents folder with a timestamp appended to the filename to identify when the report was generated. The AsBuiltConfigFilePath parameter is specified to bypass the menu driven questionnaire. PowerShell New-AsBuiltReport -Report 'VMware.ESXi' -Target 'corp-esxi01' , 'corp-esxi02' -Credential $creds -OutputFolderPath \"$env:USERPROFILE\\Documents\" -StyleFilePath 'C:\\AsBuiltReport\\MyCompanyStyle.ps1' -AsBuiltConfigFilePath 'C:\\AsBuiltReport\\MyCompanyConfig.json' -Timestamp","title":"New-AsBuiltReport"},{"location":"user-guide/new-asbuiltreport/#description","text":"New-AsBuiltReport creates as-built configuration reports for one or more target systems and exports the report in to one or more supported document formats, such as DOCX, HTML and Text. New-AsBuiltReport provides additional parameters, allowing users to generate and customise a report to their requirements.","title":"Description"},{"location":"user-guide/new-asbuiltreport/#parameters","text":"","title":"Parameters"},{"location":"user-guide/new-asbuiltreport/#report","text":"Specifies the type of report that will be generated. This is a mandatory parameter.","title":"Report"},{"location":"user-guide/new-asbuiltreport/#target","text":"Specifies the IP/FQDN of the system to connect. This is a mandatory parameter.","title":"Target"},{"location":"user-guide/new-asbuiltreport/#credential","text":"Specifies the stored credential of the target system. This is a mandatory parameter.","title":"Credential"},{"location":"user-guide/new-asbuiltreport/#username","text":"Specifies the username of the target system. This is a mandatory parameter.","title":"Username"},{"location":"user-guide/new-asbuiltreport/#password","text":"Specifies the password of the target system. This is a mandatory parameter.","title":"Password"},{"location":"user-guide/new-asbuiltreport/#token","text":"Specifies an API token to authenticate to the target system. This is an optional parameter.","title":"Token"},{"location":"user-guide/new-asbuiltreport/#mfa","text":"Use multifactor authentication to authenticate to the target system. This is an optional parameter.","title":"MFA"},{"location":"user-guide/new-asbuiltreport/#format","text":"Specifies the output format of the report. The supported output formats are Word, HTML & Text. Multiple output formats may be specified, separated by a comma. This is an optional parameter. If the parameter is not specified, the document format will default to Word.","title":"Format"},{"location":"user-guide/new-asbuiltreport/#orientation","text":"Sets the page orientation of the report to Portrait or Landscape. This is an optional parameter. If the parameter is not specified, page orientation will be set to Portrait.","title":"Orientation"},{"location":"user-guide/new-asbuiltreport/#stylefilepath","text":"Specifies the file path to a custom style .ps1 script for the report to use. This is an optional parameter and does not have a default value.","title":"StyleFilePath"},{"location":"user-guide/new-asbuiltreport/#outputfolderpath","text":"Specifies the folder path to save the report. This is a mandatory parameter.","title":"OutputFolderPath"},{"location":"user-guide/new-asbuiltreport/#asbuiltconfigfilepath","text":"Specifies the file path to the As Built Report configuration JSON file. This is an optional parameter. If this parameter is not specified, the user will be prompted for this configuration information on first run, with the option to save the configuration to a file.","title":"AsBuiltConfigFilePath"},{"location":"user-guide/new-asbuiltreport/#reportconfigfilepath","text":"Specifies the file path to a report JSON configuration file. This is an optional parameter. If this parameter is not specified, a default report configuration JSON is copied to the specified user folder. If this parameter is specified and the path to a JSON file is invalid, the script will terminate.","title":"ReportConfigFilePath"},{"location":"user-guide/new-asbuiltreport/#timestamp","text":"Specifies whether to append a timestamp string to the report filename. This is an optional parameter. By default, the timestamp string is not added to the report filename.","title":"Timestamp"},{"location":"user-guide/new-asbuiltreport/#enablehealthcheck","text":"Highlights certain issues within the system report. Some reports may not provide this functionality. This is an optional parameter. If the parameter is not specified, health checks are not enabled.","title":"EnableHealthcheck"},{"location":"user-guide/new-asbuiltreport/#sendemail","text":"Sends report to specified recipients as email attachments. This is an optional parameter.","title":"SendEmail"},{"location":"user-guide/new-asbuiltreport/#examples","text":"Creates an as-built report for a VMware vSphere environment. The report is generated in Word and Text formats and saved to the C:\\Reports folder. Health checks will be enabled. PowerShell New-AsBuiltReport -Report 'VMware.vSphere' -Target 'vcenter.domain.local' -Username 'administrator@vsphere.local' -Password 'VMware1!' -Format 'Word' , 'Text' -OutputFolderPath 'C:\\Reports' -EnableHealthCheck Creates an as-built report for two Pure Storage FlashArrays. The report is generated in HTML format, saved to the C:\\Reports folder and sent via email. PowerShell New-AsBuiltReport -Report 'PureStorage.FlashArray' -Target '192.168.10.100' , '192.168.10.110' -Credential ( Get-Credential ) -Format 'HTML' -OutputFolderPath 'C:\\Reports' -SendEmail Creates an as-built report for two VMware ESXi hosts. Authentication to VMware ESXi uses stored credentials. The report is generated in Word (DOCX) format (by default). A customized stylesheet is specified to style the report in the company\u2019s brand colours and fonts. The report is saved to the user\u2019s documents folder with a timestamp appended to the filename to identify when the report was generated. The AsBuiltConfigFilePath parameter is specified to bypass the menu driven questionnaire. PowerShell New-AsBuiltReport -Report 'VMware.ESXi' -Target 'corp-esxi01' , 'corp-esxi02' -Credential $creds -OutputFolderPath \"$env:USERPROFILE\\Documents\" -StyleFilePath 'C:\\AsBuiltReport\\MyCompanyStyle.ps1' -AsBuiltConfigFilePath 'C:\\AsBuiltReport\\MyCompanyConfig.json' -Timestamp","title":"Examples"},{"location":"user-guide/new-asbuiltreportconfig/","text":"Description New-AsBuiltReportConfig creates JSON configuration files for individual As Built Reports. Parameters Report Specifies the type of report configuration to create. This is a mandatory parameter. Folderpath Specifies the folder path to create the report JSON configuration file. This is a mandatory parameter. Filename Specifies the filename of the report JSON configuration file. If a filename is not specified, a JSON configuration file will be created with a default filename AsBuiltReport.<Vendor>.<Product>.json This is an optional parameter. Force Specifies to overwrite an existing JSON configuration. This is an optional parameter. Examples Creates a new VMware vSphere report JSON configuration file in the C:\\Reports folder. PowerShell New-AsBuiltReportConfig -Report 'VMware.vSphere' -Folderpath 'C:\\Reports' Creates a new Microsoft Active Directory report JSON configuration file named ACME.json in C:\\Reports folder. PowerShell New-AsBuiltReportConfig -Report 'Microsoft.AD' -Filename 'ACME' -Folderpath 'C:\\AsBuiltReport' Creates a new NetApp ONTAP report JSON configuration file in C:\\Reports folder, overwriting the existing AsBuiltReport.NetApp.ONTAP.json file. PowerShell New-AsBuiltReportConfig -Report 'NetApp.ONTAP' -Folderpath 'C:\\Reports' -Force","title":"New-AsBuiltReportConfig"},{"location":"user-guide/new-asbuiltreportconfig/#description","text":"New-AsBuiltReportConfig creates JSON configuration files for individual As Built Reports.","title":"Description"},{"location":"user-guide/new-asbuiltreportconfig/#parameters","text":"","title":"Parameters"},{"location":"user-guide/new-asbuiltreportconfig/#report","text":"Specifies the type of report configuration to create. This is a mandatory parameter.","title":"Report"},{"location":"user-guide/new-asbuiltreportconfig/#folderpath","text":"Specifies the folder path to create the report JSON configuration file. This is a mandatory parameter.","title":"Folderpath"},{"location":"user-guide/new-asbuiltreportconfig/#filename","text":"Specifies the filename of the report JSON configuration file. If a filename is not specified, a JSON configuration file will be created with a default filename AsBuiltReport.<Vendor>.<Product>.json This is an optional parameter.","title":"Filename"},{"location":"user-guide/new-asbuiltreportconfig/#force","text":"Specifies to overwrite an existing JSON configuration. This is an optional parameter.","title":"Force"},{"location":"user-guide/new-asbuiltreportconfig/#examples","text":"Creates a new VMware vSphere report JSON configuration file in the C:\\Reports folder. PowerShell New-AsBuiltReportConfig -Report 'VMware.vSphere' -Folderpath 'C:\\Reports' Creates a new Microsoft Active Directory report JSON configuration file named ACME.json in C:\\Reports folder. PowerShell New-AsBuiltReportConfig -Report 'Microsoft.AD' -Filename 'ACME' -Folderpath 'C:\\AsBuiltReport' Creates a new NetApp ONTAP report JSON configuration file in C:\\Reports folder, overwriting the existing AsBuiltReport.NetApp.ONTAP.json file. PowerShell New-AsBuiltReportConfig -Report 'NetApp.ONTAP' -Folderpath 'C:\\Reports' -Force","title":"Examples"}]}