{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"As Built Report Document Your Datacenter With PowerShell As Built Report is an open source configuration document framework which utilises Microsoft PowerShell to produce as-built documentation in multiple document formats for multiple vendors and technologies. The framework allows users to easily generate clear and consistent documentation, for any environment which supports Microsoft PowerShell and/or a RESTful API. Features Multiple Document Formats Granular Detail Level Customised Styling Generate reports in one or more document formats, including DOCX, HTML, and Text. Configure the detail level for each section of a report. You have the choice of producing a summarised report, a fully comprehensive report or something in between. Use a default style or create your own to match your corporate identity. Set page orientation, text and table formatting with fonts, colours, borders and highlighted cells and rows. Modular Design Health Checks Email Reports Modular design enables contributors a simple way to develop new reports. Enable health checks to highlight configuration issues within a report. Toggle individual health checks on or off as required. Attach and send reports via email to one or more recipients. Components As Built Report Configuration Reports Configuration A JSON configuration file used to store information relating to author\u2019s name, company information & SMTP mail server configuration. Individual configuration files can be saved and specified also. The report configuration is a JSON file which stores information specific to the related report. It holds information such as the report name, version, and release status. The report configuration can also provide functionality such as configurable report options, health checks and granular information levels. Reports Module Styles Script (.ps1) The report module is specific to each vendor and/or technology and is used to extract information from the specific environment. The report module will be written to utilise PowerShell modules or RESTful APIs which the vendor/technology provides. The styles script sets the default layout, fonts, colours and sizes used within the report. Style scripts can be used to layout cover pages, table of contents and other unique tables or sections. Report Modules Click each vendor logo to view available report modules and associated documentation.","title":"Home"},{"location":"#features","text":"Multiple Document Formats Granular Detail Level Customised Styling Generate reports in one or more document formats, including DOCX, HTML, and Text. Configure the detail level for each section of a report. You have the choice of producing a summarised report, a fully comprehensive report or something in between. Use a default style or create your own to match your corporate identity. Set page orientation, text and table formatting with fonts, colours, borders and highlighted cells and rows. Modular Design Health Checks Email Reports Modular design enables contributors a simple way to develop new reports. Enable health checks to highlight configuration issues within a report. Toggle individual health checks on or off as required. Attach and send reports via email to one or more recipients.","title":"Features"},{"location":"#components","text":"As Built Report Configuration Reports Configuration A JSON configuration file used to store information relating to author\u2019s name, company information & SMTP mail server configuration. Individual configuration files can be saved and specified also. The report configuration is a JSON file which stores information specific to the related report. It holds information such as the report name, version, and release status. The report configuration can also provide functionality such as configurable report options, health checks and granular information levels. Reports Module Styles Script (.ps1) The report module is specific to each vendor and/or technology and is used to extract information from the specific environment. The report module will be written to utilise PowerShell modules or RESTful APIs which the vendor/technology provides. The styles script sets the default layout, fonts, colours and sizes used within the report. Style scripts can be used to layout cover pages, table of contents and other unique tables or sections.","title":"Components"},{"location":"#report-modules","text":"Click each vendor logo to view available report modules and associated documentation.","title":"Report Modules"},{"location":"about/acknowledgements/","text":"Tim Carman Project Creator & Lead Developer Twitter - @tpcarman GitHub - @tpcarman Matt Allford Project Advocate & Contributor Twitter - @mattallford GitHub - @mattallford Jonathan Colon Project Advocate & Contributor Twitter - @jcolonfzenpr GitHub - @rebelinux Iain Brighton PScribo Creator & Lead Developer Twitter - @iainbrighton GitHub - @iainbrighton","title":"Acknowledgements"},{"location":"about/acknowledgements/#tim-carman","text":"","title":"Tim Carman "},{"location":"about/acknowledgements/#matt-allford","text":"","title":"Matt Allford "},{"location":"about/acknowledgements/#jonathan-colon","text":"","title":"Jonathan Colon "},{"location":"about/acknowledgements/#iain-brighton","text":"","title":"Iain Brighton "},{"location":"about/contact/","text":"Contact Us Email - support@asbuiltreport.com Follow Us Twitter - @AsBuiltReport GitHub - @AsBuiltReport YouTube - @AsBuiltReport VMware {code} Slack - #AsBuiltReport","title":"Contact"},{"location":"about/contact/#contact-us","text":"Email - support@asbuiltreport.com","title":"Contact Us"},{"location":"about/contact/#follow-us","text":"Twitter - @AsBuiltReport GitHub - @AsBuiltReport YouTube - @AsBuiltReport VMware {code} Slack - #AsBuiltReport","title":"Follow Us"},{"location":"about/contributing/","text":"Your contribution is welcomed and appreciated. Contributing to this project is as easy as: Discussing the current state of the code Proposing new features Reporting an issue or bug Submitting a fix Creating a new report module Intro to Git and GitHub Make sure you have a GitHub account . Learning Git: Learning Git and GitHub Git Branching Develop with GitHub This project uses GitHub to host code, to track issues and feature requests, as well as accept pull requests. We use GitHub Flow to collaborate and to propose changes to the codebase. We actively welcome your pull requests. Forks and Pull Requests GitHub fosters collaboration through the notion of pull requests . On GitHub, anyone can fork an existing repository into their own user account, where they can make private changes to their fork. To contribute these changes back into the original repository, a user simply creates a pull request in order to \"request\" that the changes be taken \"upstream\". Additional references: GitHub's guide on Forking GitHub's guide on Contributing to Open Source GitHub's guide on Understanding the GitHub Flow Version control branching Always create a new branch for your work, no matter how small. Avoid submitting unrelated changes (bug fixes & new features) in the same branch/pull request. Base your new branch off of the appropriate branch on the dev repository. How to submit a contribution If you wish to discuss ways in which to contribute to the AsBuiltReport project, you may raise an issue within the relevant repository , or email us . Creating quality pull requests A good quality pull request will have the following characteristics: When you create a pull request, include a summary about your changes in the PR description. The description is used to create change logs, so try to have the first sentence explain the benefit to end users. If the changes are related to an existing GitHub issue, please reference the issue in the PR description (e.g. Fix #11 ) It's recommended to avoid a PR with too many changes. A large PR not only stretches the review time, but also makes it much harder to identify issues. In such case, it's better to split the PR to multiple smaller ones. For large features, try to approach it in an incremental way, so that each PR won't be too big. Add a meaningful title of the PR describing what change you want to check in. Don't simply put: \"Fix issue #5\" . Also don't directly use the issue title as the PR title. An issue title is to briefly describe what is wrong, while a PR title is to briefly describe what is changed. A better example is: \"Add Ensure parameter to New-Item cmdlet\" , with \"Fix #5\" in the PR's body. Please use the present tense and imperative mood when describing your changes: Instead of \"Adding support for Windows Server 2012 R2\" , write \"Add support for Windows Server 2012 R2\" . Instead of \"Fixed for server connection issue\" , write \"Fix server connection issue\" . It will have a title that reflects the work within, and a summary that helps to understand the context of the change. There will be well written commit messages, with well crafted commits that tell the story of the development of this work. Ideally it will be small and easy to understand. Single commit PRs are usually easy to submit, review, and merge. The code contained within will meet the best practices set by the team wherever possible. If in doubt, please contact us . Submitting pull requests Always create a pull request to the dev branch of a repository. Fork an AsBuiltReport repository . The example below uses the main AsBuiltReport.Core repository in the command examples. Add https://github.com/AsBuiltReport/AsBuiltReport.Core.git as a remote named upstream . git remote add upstream https://github.com/AsBuiltReport/AsBuiltReport.Core.git Create your feature branch from dev . Work on your feature. Update CHANGELOG.md in the repository you have worked in with add / remove / fix / change information Update README.md in the repository you have worked in with any new information, such as features, instructions, parameters and/or examples Squash commits into one or two succinct commits. git rebase -i HEAD~n # n being the number of previous commits to rebase Ensure that your branch is up to date with upstream/dev . git checkout <branch> git fetch upstream git rebase upstream/dev Push branch to your fork. git push --force Open a Pull Request against the dev branch of a repository. We have Pull Requests templates in all repositories for this project. Please follow the template with each Pull Request. Pull requests will be reviewed as soon as possible. Reporting Issues and Bugs GitHub issues is used to track issues and bugs. Report a bug by opening a new issue in the relevant AsBuiltReport repository . Due diligence Before submitting a bug, or raising an issue, please do the following; Perform basic troubleshooting steps: Read the documentation. Ensure you have read the README documentation within the relevant report repository. Check the Supported Versions , System Requirements and Module Installation sections. Make sure you're running the latest version. If you\u2019re not on the most recent version, your problem may have been solved already! Upgrading is always the best first step. Review dependencies. If the release in question has other dependencies (e.g. vendor PowerShell modules) try upgrading/downgrading those as well. Use Verbose parameter. Add -Verbose parameter to the command line to see if the issue can be identified via the output. Disable report InfoLevels. Edit the report config and set all InfoLevels to 0. Gradually increase InfoLevel values for each section individually, until you are able to recreate the issue. Try older versions. If you\u2019re already on the latest release, try rolling back a few minor versions (e.g. if on 1.7, try 1.5 or 1.6) and see if the problem goes away. This will help narrow down when the problem first arose in the commit log. Search the open and closed issues within the relevant repository to make sure it\u2019s not a current or previous known issue. What to include in your issue report To make sure your issue gets the attention it deserves, please consider the information requested below as the bare minimum; more information is almost always better! Issues with missing information may be ignored or pushed back to you, delaying a resolution. Great issue and bug reports tend to have: A quick summary and/or background of the issue Software versions you are using; AsBuiltReport module versions (e.g. AsBuiltReport.Core v1.2.0 & AsBuiltReport.VMware.vSphere v1.3.1) PowerShell versions (e.g. Windows PowerShell 5.1) Operating System versions (e.g. Windows Server 2016 Version 1607) Steps to reproduce the issue; Be specific Provide the full command line you are executing Give sample code if you can Upload a screenshot if possible What you expected would happen What actually happens Notes (possibly including why you think this might be happening, or steps you have performed to resolve the issue) Code Contributions Code Editor We highly encourage you use the multi-platform code editor Visual Studio Code (VS Code) when developing code for AsBuiltReport. Use a Consistent Coding Style Code contributors should follow the PowerShell Guidelines wherever possible to ensure scripts are consistent in style. Use PSScriptAnalyzer to check code quality against PowerShell Best Practices. DO Use PascalCasing for all public member, type, and namespace names consisting of multiple words. Use custom label headers within tables, where required, to make easily readable labels. Favour readability over brevity . Use PSCustomObjects to store data that will be exported to a PScribo table. This helps with readability. Use the following structure to create tables Creating tables with PSCustomObject # Create the PSCustomObject $myObject = [PSCustomObject] @{ Name = 'Tim' Language = 'PowerShell' City = 'Melbourne' State = 'Victoria' Country = 'Australia' } # Set the table parameters - Table name, type & column widths # A list table is set and column widths are evenly set at 50% for each column $TableParams = @{ Name = 'User Info' List = $true ColumnWidths = 50 , 50 } # This code snippet must be included for options to show table captions if ( $Report . ShowTableCaptions ) { $TableParams [ 'Caption' ] = \"- $( $TableParams . Name ) \" } # Output PSCustomObject to table using defined parameters $myObject | Table @TableParams Set ColumnWidths for all tables to improve formatting and readability. Try to maintain a consistent style throughout the report. Cell text will word wrap. List tables should generally use column widths of 50, 50 . Sort primary object properties in alphanumeric order. Try to perform all safe commands (Get-*, Get API call, etc) at the start of a report script so it can easily be seen what data is being collected. Use comments written in English, but don't overdo it. Comments should serve to your reasoning and decision-making, not attempt to explain what a command does. Maintain a change log as per these guidelines . The change log should be named CHANGELOG.md . DO NOT Do not include functions within report scripts. Individual script files should be created as a private function and be stored in the \\Src\\Private folder. License By contributing, you agree that your contributions will be licensed under the MIT License .","title":"Contributing"},{"location":"about/contributing/#intro-to-git-and-github","text":"Make sure you have a GitHub account . Learning Git: Learning Git and GitHub Git Branching","title":" Intro to Git and GitHub"},{"location":"about/contributing/#develop-with-github","text":"This project uses GitHub to host code, to track issues and feature requests, as well as accept pull requests. We use GitHub Flow to collaborate and to propose changes to the codebase. We actively welcome your pull requests.","title":" Develop with GitHub"},{"location":"about/contributing/#forks-and-pull-requests","text":"GitHub fosters collaboration through the notion of pull requests . On GitHub, anyone can fork an existing repository into their own user account, where they can make private changes to their fork. To contribute these changes back into the original repository, a user simply creates a pull request in order to \"request\" that the changes be taken \"upstream\". Additional references: GitHub's guide on Forking GitHub's guide on Contributing to Open Source GitHub's guide on Understanding the GitHub Flow","title":"Forks and Pull Requests"},{"location":"about/contributing/#version-control-branching","text":"Always create a new branch for your work, no matter how small. Avoid submitting unrelated changes (bug fixes & new features) in the same branch/pull request. Base your new branch off of the appropriate branch on the dev repository.","title":"Version control branching"},{"location":"about/contributing/#how-to-submit-a-contribution","text":"If you wish to discuss ways in which to contribute to the AsBuiltReport project, you may raise an issue within the relevant repository , or email us .","title":" How to submit a contribution"},{"location":"about/contributing/#creating-quality-pull-requests","text":"A good quality pull request will have the following characteristics: When you create a pull request, include a summary about your changes in the PR description. The description is used to create change logs, so try to have the first sentence explain the benefit to end users. If the changes are related to an existing GitHub issue, please reference the issue in the PR description (e.g. Fix #11 ) It's recommended to avoid a PR with too many changes. A large PR not only stretches the review time, but also makes it much harder to identify issues. In such case, it's better to split the PR to multiple smaller ones. For large features, try to approach it in an incremental way, so that each PR won't be too big. Add a meaningful title of the PR describing what change you want to check in. Don't simply put: \"Fix issue #5\" . Also don't directly use the issue title as the PR title. An issue title is to briefly describe what is wrong, while a PR title is to briefly describe what is changed. A better example is: \"Add Ensure parameter to New-Item cmdlet\" , with \"Fix #5\" in the PR's body. Please use the present tense and imperative mood when describing your changes: Instead of \"Adding support for Windows Server 2012 R2\" , write \"Add support for Windows Server 2012 R2\" . Instead of \"Fixed for server connection issue\" , write \"Fix server connection issue\" . It will have a title that reflects the work within, and a summary that helps to understand the context of the change. There will be well written commit messages, with well crafted commits that tell the story of the development of this work. Ideally it will be small and easy to understand. Single commit PRs are usually easy to submit, review, and merge. The code contained within will meet the best practices set by the team wherever possible. If in doubt, please contact us .","title":"Creating quality pull requests"},{"location":"about/contributing/#submitting-pull-requests","text":"Always create a pull request to the dev branch of a repository. Fork an AsBuiltReport repository . The example below uses the main AsBuiltReport.Core repository in the command examples. Add https://github.com/AsBuiltReport/AsBuiltReport.Core.git as a remote named upstream . git remote add upstream https://github.com/AsBuiltReport/AsBuiltReport.Core.git Create your feature branch from dev . Work on your feature. Update CHANGELOG.md in the repository you have worked in with add / remove / fix / change information Update README.md in the repository you have worked in with any new information, such as features, instructions, parameters and/or examples Squash commits into one or two succinct commits. git rebase -i HEAD~n # n being the number of previous commits to rebase Ensure that your branch is up to date with upstream/dev . git checkout <branch> git fetch upstream git rebase upstream/dev Push branch to your fork. git push --force Open a Pull Request against the dev branch of a repository. We have Pull Requests templates in all repositories for this project. Please follow the template with each Pull Request. Pull requests will be reviewed as soon as possible.","title":"Submitting pull requests"},{"location":"about/contributing/#reporting-issues-and-bugs","text":"GitHub issues is used to track issues and bugs. Report a bug by opening a new issue in the relevant AsBuiltReport repository .","title":" Reporting Issues and Bugs"},{"location":"about/contributing/#due-diligence","text":"Before submitting a bug, or raising an issue, please do the following; Perform basic troubleshooting steps: Read the documentation. Ensure you have read the README documentation within the relevant report repository. Check the Supported Versions , System Requirements and Module Installation sections. Make sure you're running the latest version. If you\u2019re not on the most recent version, your problem may have been solved already! Upgrading is always the best first step. Review dependencies. If the release in question has other dependencies (e.g. vendor PowerShell modules) try upgrading/downgrading those as well. Use Verbose parameter. Add -Verbose parameter to the command line to see if the issue can be identified via the output. Disable report InfoLevels. Edit the report config and set all InfoLevels to 0. Gradually increase InfoLevel values for each section individually, until you are able to recreate the issue. Try older versions. If you\u2019re already on the latest release, try rolling back a few minor versions (e.g. if on 1.7, try 1.5 or 1.6) and see if the problem goes away. This will help narrow down when the problem first arose in the commit log. Search the open and closed issues within the relevant repository to make sure it\u2019s not a current or previous known issue.","title":"Due diligence"},{"location":"about/contributing/#what-to-include-in-your-issue-report","text":"To make sure your issue gets the attention it deserves, please consider the information requested below as the bare minimum; more information is almost always better! Issues with missing information may be ignored or pushed back to you, delaying a resolution. Great issue and bug reports tend to have: A quick summary and/or background of the issue Software versions you are using; AsBuiltReport module versions (e.g. AsBuiltReport.Core v1.2.0 & AsBuiltReport.VMware.vSphere v1.3.1) PowerShell versions (e.g. Windows PowerShell 5.1) Operating System versions (e.g. Windows Server 2016 Version 1607) Steps to reproduce the issue; Be specific Provide the full command line you are executing Give sample code if you can Upload a screenshot if possible What you expected would happen What actually happens Notes (possibly including why you think this might be happening, or steps you have performed to resolve the issue)","title":"What to include in your issue report"},{"location":"about/contributing/#code-contributions","text":"","title":" Code Contributions"},{"location":"about/contributing/#code-editor","text":"We highly encourage you use the multi-platform code editor Visual Studio Code (VS Code) when developing code for AsBuiltReport.","title":"Code Editor"},{"location":"about/contributing/#use-a-consistent-coding-style","text":"Code contributors should follow the PowerShell Guidelines wherever possible to ensure scripts are consistent in style. Use PSScriptAnalyzer to check code quality against PowerShell Best Practices. DO Use PascalCasing for all public member, type, and namespace names consisting of multiple words. Use custom label headers within tables, where required, to make easily readable labels. Favour readability over brevity . Use PSCustomObjects to store data that will be exported to a PScribo table. This helps with readability. Use the following structure to create tables Creating tables with PSCustomObject # Create the PSCustomObject $myObject = [PSCustomObject] @{ Name = 'Tim' Language = 'PowerShell' City = 'Melbourne' State = 'Victoria' Country = 'Australia' } # Set the table parameters - Table name, type & column widths # A list table is set and column widths are evenly set at 50% for each column $TableParams = @{ Name = 'User Info' List = $true ColumnWidths = 50 , 50 } # This code snippet must be included for options to show table captions if ( $Report . ShowTableCaptions ) { $TableParams [ 'Caption' ] = \"- $( $TableParams . Name ) \" } # Output PSCustomObject to table using defined parameters $myObject | Table @TableParams Set ColumnWidths for all tables to improve formatting and readability. Try to maintain a consistent style throughout the report. Cell text will word wrap. List tables should generally use column widths of 50, 50 . Sort primary object properties in alphanumeric order. Try to perform all safe commands (Get-*, Get API call, etc) at the start of a report script so it can easily be seen what data is being collected. Use comments written in English, but don't overdo it. Comments should serve to your reasoning and decision-making, not attempt to explain what a command does. Maintain a change log as per these guidelines . The change log should be named CHANGELOG.md . DO NOT Do not include functions within report scripts. Individual script files should be created as a private function and be stored in the \\Src\\Private folder.","title":"Use a Consistent Coding Style"},{"location":"about/contributing/#license","text":"By contributing, you agree that your contributions will be licensed under the MIT License .","title":" License"},{"location":"about/license/","text":"MIT License Copyright (c) 2016-2022 Tim Carman Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"dev-guide/creating-a-report-module/","text":"This page is currently under development.","title":"Creating a report module"},{"location":"dev-guide/creating-a-report-style/","text":"When generating an As Built Report, its formatting and style is defined using a PowerShell (.ps1) script which utilises a set of PScribo cmdlets. When creating a report style for a new report module, the default colours and logos (if permitted) should align to a vendor's branding guidelines. Most vendors will publish their branding guidelines on their website. A simple Google search should reveal all the information you need to create a report style for a particular vendor. Where a report module already exists for a particular vendor, please ensure you include the existing vendor report style in the new report module. This guide may also be used to create custom style scripts which match your individual and/or corporate identities. Info This guide assumes you have already installed an AsBuiltReport module. Most of the information contained within this guide has been sourced from the official PScribo documentation. Tip Use any report's default style script as a reference for creating a new style script, or download some sample styles from here . A report's default style script is located in the report module root folder and is named AsBuiltReport.<Vendor>.<Product>.Style.ps1 Global Document Options The DocumentOption cmdlet is used to set global document options, including default font, page size, margins and orientation. EnableSectionNumbering enables automatic numbering of document sections. PageSize sets the page size. Available options include A4, Letter and Legal. DefaultFont sets the default font. It is highly recommended to use a standard, web-safe font. MarginLeftAndRight sets the left and right page margins to the points (pt) specified. MarginTopAndBottom sets the top and bottom page margins to the points (pt) specified. Orientation sets the document's default page orientation. It is highly recommended that you do not modify the $Orientation parameter value. Additonal Information get-help about_PScriboDocument DocumentOption # Default DocumentOption DocumentOption -EnableSectionNumbering -PageSize 'A4' -DefaultFont 'Arial' -MarginLeftAndRight 71 -MarginTopAndBottom 71 -Orientation $Orientation # Custom DocumentOption # Disable automatic section numbering. Set page size to Letter. Set default font to Tahoma. Set custom page margins. DocumentOption -PageSize 'Letter' -DefaultFont 'Tahoma' -MarginLeftAndRight 74 -MarginTopAndBottom 65 -Orientation $Orientation Styles The Style cmdlet defines a custom formatting style which can be applied to section headings, paragraphs and within table styles. Styles need to be defined before any formatting can be applied within a document (with the exception of paragraphs). Each style permits the setting of the font to use, the font size and colour. Additonal Information get-help about_PScriboStyles Default Styles A style script uses a standard set of styles for a report. These styles are defined below and must be included in every style script. Normal - Default text style Title - Cover Page Title text style Title 2 - Cover Page Subtitle 1 text style Title 3 - Cover Page Subtitle 2 text style TOC - Section heading Table of Contents text style Heading1 - Section heading level 1 text style Heading2 - Section heading level 2 text style Heading3 - Section heading level 3 text style Heading4 - Section heading level 4 text style Heading5 - Section heading level 5 text style Heading6 - Section heading level 6 text style TableDefaultHeading - Table heading row style TableDefaultRow - Table row style TableDefaultAltRow - Table alternating row style Caption - Table caption style Header - Document header style Footer - Document footer style Critical - Table row/cell highlight style for critical alerts Warning - Table row/cell highlight style for warning alerts Info - Table row/cell highlight style for informational alerts OK - Table row/cell highlight style for known good alerts Custom Styles Using the default style names, these styles can be customised to suit your individual requirements. Font, Size, Color and Text alignment are just some of the style properties which can be customised to tailor a report to your liking. Additional styles can also be defined for use in custom defined sections, paragraphs and tables. Custom Style Definitions Example # Heading & Font Styles Formatting Style -Name 'Title' -Size 24 -Color '00785F' -Align Left Style -Name 'Title 2' -Size 18 -Color '00A956' -Align Left Style -Name 'Title 3' -Size 12 -Color '006A91' -Align Left Style -Name 'Heading 1' -Size 16 -Color '00785F' Style -Name 'Heading 2' -Size 14 -Color '004B6B' Style -Name 'Heading 3' -Size 12 -Color '00567A' Style -Name 'Heading 4' -Size 11 -Color '00648F' Style -Name 'Heading 5' -Size 10 -Color '0072A3' Style -Name 'Normal' -Size 10 -Color '000000' -Default # Header & Footer Formatting Style -Name 'Header' -Size 10 -Color '000000' -Align Left Style -Name 'Footer' -Size 10 -Color '000000' -Align Right # Table of Contents Formatting Style -Name 'TOC' -Size 16 -Color '00785F' # Table Heading & Row Formatting Style -Name 'TableDefaultHeading' -Size 10 -Color 'FAFAFA' -BackgroundColor '00785F' Style -Name 'TableDefaultRow' -Size 10 -Color '000000' Style -Name 'TableDefaultAltRow' -Size 10 -Color '000000' -BackgroundColor 'EAEAE6' # Table Row/Cell Highlight Formatting Style -Name 'Critical' -Size 10 -Color '000000' -BackgroundColor 'FEDDD7' Style -Name 'Warning' -Size 10 -Color '000000' -BackgroundColor 'FFF4C7' Style -Name 'Info' -Size 10 -Color '000000' -BackgroundColor 'E3F5FC' Style -Name 'OK' -Size 10 -Color '000000' -BackgroundColor 'DFF0D0' # Table Caption Formatting Style -Name 'Caption' -Size 10 -Color '000000' -Align Left Table Styles The TableStyle cmdlet defines a custom formatting style for tables that is comprised of a heading, row and alternate row styles. Table styles are a combination of individual styles with some additional formatting options specific to tables, i.e. borders and padding. A table style can specify a style for the heading row, a default row style and an optional alternating row style. The individual styles used by within a table style must first be defined with the Style cmdlet before they can be used within TableStyle . Just like individual document styles, it is possible to create your own custom table styles, override the built-in style and set a different table style as the \"default\". Table Style Definitions # Define Default Table Style Properties $TableDefaultProperties = @{ Id = 'TableDefault' HeaderStyle = 'TableDefaultHeading' RowStyle = 'TableDefaultRow' AlternateRowStyle = 'TableDefaultAltRow' BorderColor = '00785F' Align = 'Left' CaptionStyle = 'Caption' CaptionLocation = 'Below' BorderWidth = 0 . 25 PaddingTop = 1 PaddingBottom = 1 . 5 PaddingLeft = 2 PaddingRight = 2 } # Set Default Table Styles TableStyle @TableDefaultProperties -Default # Create a Table without a border TableStyle -Id 'Borderless' -HeaderStyle Normal -RowStyle Normal -BorderWidth 0 Table of Contents The TOC cmdlet creates a 'Table of Contents' from the document's section headings. Each report will include a JSON configuration file which provides an option to enable/disable the Table of Contents. Show Table of Contents Option { \"Report\" : { \"Name\" : \"VMware vSphere As Built Report\" , \"Version\" : \"1.0\" , \"Status\" : \"Released\" , \"ShowCoverPageImage\" : true , \"ShowTableOfContents\" : true , \"ShowHeaderFooter\" : true , \"ShowTableCaptions\" : true } } Should you wish to include an option for a Table of Contents within your style script, ensure you add the following code to the end of your script. # Set TOC, if enabled in report JSON configuration if ( $ReportConfig . Report . ShowTableOfContents ) { # Add Table of Contents TOC -Name 'Table of Contents' PageBreak } Table Captions Each report will include a JSON configuration file which provides an option to enable/disable table captions. Ensure you configure CaptionStyle and CaptionLocation in your table properties. Show Table Caption Option { \"Report\" : { \"Name\" : \"VMware vSphere As Built Report\" , \"Version\" : \"1.0\" , \"Status\" : \"Released\" , \"ShowCoverPageImage\" : true , \"ShowTableOfContents\" : true , \"ShowHeaderFooter\" : true , \"ShowTableCaptions\" : true } } Caption Style & Location Definitions # Define default Table Style properties $TableDefaultProperties = @{ Id = 'TableDefault' HeaderStyle = 'TableDefaultHeading' RowStyle = 'TableDefaultRow' BorderColor = '00785F' Align = 'Left' CaptionStyle = 'Caption' CaptionLocation = 'Below' BorderWidth = 0 . 25 PaddingTop = 1 PaddingBottom = 1 . 5 PaddingLeft = 2 PaddingRight = 2 } Headers and Footers The Header and Footer cmdlets define the document header and footer on the first and/or all pages of the document. Each report will include a JSON configuration file which provides an option to enable/disable document headers and footers. Show Header/Footer Option { \"Report\" : { \"Name\" : \"VMware vSphere As Built Report\" , \"Version\" : \"1.0\" , \"Status\" : \"Released\" , \"ShowCoverPageImage\" : true , \"ShowTableOfContents\" : true , \"ShowHeaderFooter\" : true , \"ShowTableCaptions\" : true } } The following code should be included in your style script to utilise the report configration option. The highlighted lines can be modified to suit your requirements. # Set Header & Footer, if enabled in report JSON configuration if ( $ReportConfig . Report . ShowHeaderFooter ) { Header -Default { Paragraph -Style Header -Text \" $( $ReportConfig . Report . Name ) - v $( $ReportConfig . Report . Version ) \" } Footer -Default { Paragraph -Style Footer -Text 'Page <!# PageNumber #!>' } } Additional Information get-help Header -Detailed get-help Footer -Detailed Images Images are not supported when using Linux & macOS Unfortunately due to breaking changes in .NET 6, images are no longer supported for reports generated using Linux or macOS. The Image cmdlet is used to insert images into a document. An image can be specified using the URI or Base64 parameters. Images can be converted to a Base64 string using an online image converter such as Base64.Guru . Align and Percent values can be adjusted to horizontally position and size the image. Additional Information get-help Image -Detailed Cover Page The code below should be included in a style script to set a cover image or logo. The highlighted line can be modified to suit your requirements. Set Cover Page Image # Show Cover page image, if enabled in report JSON configuration if ( $ReportConfig . Report . ShowCoverPageImage ) { Try { Image -Text 'My Image' -Align Left -Percent 50 -Base64 < Base64 string > } Catch { Write-PScriboMessage -IsWarning -Message \".NET Core is required for cover page image support. Please install .NET Core or disable 'ShowCoverPageImage' in the report JSON configuration file.\" } }","title":"Creating a report style"},{"location":"dev-guide/creating-a-report-style/#global-document-options","text":"The DocumentOption cmdlet is used to set global document options, including default font, page size, margins and orientation. EnableSectionNumbering enables automatic numbering of document sections. PageSize sets the page size. Available options include A4, Letter and Legal. DefaultFont sets the default font. It is highly recommended to use a standard, web-safe font. MarginLeftAndRight sets the left and right page margins to the points (pt) specified. MarginTopAndBottom sets the top and bottom page margins to the points (pt) specified. Orientation sets the document's default page orientation. It is highly recommended that you do not modify the $Orientation parameter value. Additonal Information get-help about_PScriboDocument DocumentOption # Default DocumentOption DocumentOption -EnableSectionNumbering -PageSize 'A4' -DefaultFont 'Arial' -MarginLeftAndRight 71 -MarginTopAndBottom 71 -Orientation $Orientation # Custom DocumentOption # Disable automatic section numbering. Set page size to Letter. Set default font to Tahoma. Set custom page margins. DocumentOption -PageSize 'Letter' -DefaultFont 'Tahoma' -MarginLeftAndRight 74 -MarginTopAndBottom 65 -Orientation $Orientation","title":"Global Document Options"},{"location":"dev-guide/creating-a-report-style/#styles","text":"The Style cmdlet defines a custom formatting style which can be applied to section headings, paragraphs and within table styles. Styles need to be defined before any formatting can be applied within a document (with the exception of paragraphs). Each style permits the setting of the font to use, the font size and colour. Additonal Information get-help about_PScriboStyles","title":"Styles"},{"location":"dev-guide/creating-a-report-style/#default-styles","text":"A style script uses a standard set of styles for a report. These styles are defined below and must be included in every style script. Normal - Default text style Title - Cover Page Title text style Title 2 - Cover Page Subtitle 1 text style Title 3 - Cover Page Subtitle 2 text style TOC - Section heading Table of Contents text style Heading1 - Section heading level 1 text style Heading2 - Section heading level 2 text style Heading3 - Section heading level 3 text style Heading4 - Section heading level 4 text style Heading5 - Section heading level 5 text style Heading6 - Section heading level 6 text style TableDefaultHeading - Table heading row style TableDefaultRow - Table row style TableDefaultAltRow - Table alternating row style Caption - Table caption style Header - Document header style Footer - Document footer style Critical - Table row/cell highlight style for critical alerts Warning - Table row/cell highlight style for warning alerts Info - Table row/cell highlight style for informational alerts OK - Table row/cell highlight style for known good alerts","title":"Default Styles"},{"location":"dev-guide/creating-a-report-style/#custom-styles","text":"Using the default style names, these styles can be customised to suit your individual requirements. Font, Size, Color and Text alignment are just some of the style properties which can be customised to tailor a report to your liking. Additional styles can also be defined for use in custom defined sections, paragraphs and tables. Custom Style Definitions Example # Heading & Font Styles Formatting Style -Name 'Title' -Size 24 -Color '00785F' -Align Left Style -Name 'Title 2' -Size 18 -Color '00A956' -Align Left Style -Name 'Title 3' -Size 12 -Color '006A91' -Align Left Style -Name 'Heading 1' -Size 16 -Color '00785F' Style -Name 'Heading 2' -Size 14 -Color '004B6B' Style -Name 'Heading 3' -Size 12 -Color '00567A' Style -Name 'Heading 4' -Size 11 -Color '00648F' Style -Name 'Heading 5' -Size 10 -Color '0072A3' Style -Name 'Normal' -Size 10 -Color '000000' -Default # Header & Footer Formatting Style -Name 'Header' -Size 10 -Color '000000' -Align Left Style -Name 'Footer' -Size 10 -Color '000000' -Align Right # Table of Contents Formatting Style -Name 'TOC' -Size 16 -Color '00785F' # Table Heading & Row Formatting Style -Name 'TableDefaultHeading' -Size 10 -Color 'FAFAFA' -BackgroundColor '00785F' Style -Name 'TableDefaultRow' -Size 10 -Color '000000' Style -Name 'TableDefaultAltRow' -Size 10 -Color '000000' -BackgroundColor 'EAEAE6' # Table Row/Cell Highlight Formatting Style -Name 'Critical' -Size 10 -Color '000000' -BackgroundColor 'FEDDD7' Style -Name 'Warning' -Size 10 -Color '000000' -BackgroundColor 'FFF4C7' Style -Name 'Info' -Size 10 -Color '000000' -BackgroundColor 'E3F5FC' Style -Name 'OK' -Size 10 -Color '000000' -BackgroundColor 'DFF0D0' # Table Caption Formatting Style -Name 'Caption' -Size 10 -Color '000000' -Align Left","title":"Custom Styles"},{"location":"dev-guide/creating-a-report-style/#table-styles","text":"The TableStyle cmdlet defines a custom formatting style for tables that is comprised of a heading, row and alternate row styles. Table styles are a combination of individual styles with some additional formatting options specific to tables, i.e. borders and padding. A table style can specify a style for the heading row, a default row style and an optional alternating row style. The individual styles used by within a table style must first be defined with the Style cmdlet before they can be used within TableStyle . Just like individual document styles, it is possible to create your own custom table styles, override the built-in style and set a different table style as the \"default\". Table Style Definitions # Define Default Table Style Properties $TableDefaultProperties = @{ Id = 'TableDefault' HeaderStyle = 'TableDefaultHeading' RowStyle = 'TableDefaultRow' AlternateRowStyle = 'TableDefaultAltRow' BorderColor = '00785F' Align = 'Left' CaptionStyle = 'Caption' CaptionLocation = 'Below' BorderWidth = 0 . 25 PaddingTop = 1 PaddingBottom = 1 . 5 PaddingLeft = 2 PaddingRight = 2 } # Set Default Table Styles TableStyle @TableDefaultProperties -Default # Create a Table without a border TableStyle -Id 'Borderless' -HeaderStyle Normal -RowStyle Normal -BorderWidth 0","title":"Table Styles"},{"location":"dev-guide/creating-a-report-style/#table-of-contents","text":"The TOC cmdlet creates a 'Table of Contents' from the document's section headings. Each report will include a JSON configuration file which provides an option to enable/disable the Table of Contents. Show Table of Contents Option { \"Report\" : { \"Name\" : \"VMware vSphere As Built Report\" , \"Version\" : \"1.0\" , \"Status\" : \"Released\" , \"ShowCoverPageImage\" : true , \"ShowTableOfContents\" : true , \"ShowHeaderFooter\" : true , \"ShowTableCaptions\" : true } } Should you wish to include an option for a Table of Contents within your style script, ensure you add the following code to the end of your script. # Set TOC, if enabled in report JSON configuration if ( $ReportConfig . Report . ShowTableOfContents ) { # Add Table of Contents TOC -Name 'Table of Contents' PageBreak }","title":"Table of Contents"},{"location":"dev-guide/creating-a-report-style/#table-captions","text":"Each report will include a JSON configuration file which provides an option to enable/disable table captions. Ensure you configure CaptionStyle and CaptionLocation in your table properties. Show Table Caption Option { \"Report\" : { \"Name\" : \"VMware vSphere As Built Report\" , \"Version\" : \"1.0\" , \"Status\" : \"Released\" , \"ShowCoverPageImage\" : true , \"ShowTableOfContents\" : true , \"ShowHeaderFooter\" : true , \"ShowTableCaptions\" : true } } Caption Style & Location Definitions # Define default Table Style properties $TableDefaultProperties = @{ Id = 'TableDefault' HeaderStyle = 'TableDefaultHeading' RowStyle = 'TableDefaultRow' BorderColor = '00785F' Align = 'Left' CaptionStyle = 'Caption' CaptionLocation = 'Below' BorderWidth = 0 . 25 PaddingTop = 1 PaddingBottom = 1 . 5 PaddingLeft = 2 PaddingRight = 2 }","title":"Table Captions"},{"location":"dev-guide/creating-a-report-style/#headers-and-footers","text":"The Header and Footer cmdlets define the document header and footer on the first and/or all pages of the document. Each report will include a JSON configuration file which provides an option to enable/disable document headers and footers. Show Header/Footer Option { \"Report\" : { \"Name\" : \"VMware vSphere As Built Report\" , \"Version\" : \"1.0\" , \"Status\" : \"Released\" , \"ShowCoverPageImage\" : true , \"ShowTableOfContents\" : true , \"ShowHeaderFooter\" : true , \"ShowTableCaptions\" : true } } The following code should be included in your style script to utilise the report configration option. The highlighted lines can be modified to suit your requirements. # Set Header & Footer, if enabled in report JSON configuration if ( $ReportConfig . Report . ShowHeaderFooter ) { Header -Default { Paragraph -Style Header -Text \" $( $ReportConfig . Report . Name ) - v $( $ReportConfig . Report . Version ) \" } Footer -Default { Paragraph -Style Footer -Text 'Page <!# PageNumber #!>' } } Additional Information get-help Header -Detailed get-help Footer -Detailed","title":"Headers and Footers"},{"location":"dev-guide/creating-a-report-style/#images","text":"Images are not supported when using Linux & macOS Unfortunately due to breaking changes in .NET 6, images are no longer supported for reports generated using Linux or macOS. The Image cmdlet is used to insert images into a document. An image can be specified using the URI or Base64 parameters. Images can be converted to a Base64 string using an online image converter such as Base64.Guru . Align and Percent values can be adjusted to horizontally position and size the image. Additional Information get-help Image -Detailed","title":"Images"},{"location":"dev-guide/creating-a-report-style/#cover-page","text":"The code below should be included in a style script to set a cover image or logo. The highlighted line can be modified to suit your requirements. Set Cover Page Image # Show Cover page image, if enabled in report JSON configuration if ( $ReportConfig . Report . ShowCoverPageImage ) { Try { Image -Text 'My Image' -Align Left -Percent 50 -Base64 < Base64 string > } Catch { Write-PScriboMessage -IsWarning -Message \".NET Core is required for cover page image support. Please install .NET Core or disable 'ShowCoverPageImage' in the report JSON configuration file.\" } }","title":"Cover Page"},{"location":"getting-started/installation/","text":"Please follow these quick and simple instructions to install As Built Report. PowerShell System Requirements PowerShell Version Open a PowerShell console and run the following command to determine your version of PowerShell. Check PowerShell version $PSVersionTable $PSVersionTable Sample Output Name Value PSVersion 7.2.5 PSEdition Core GitCommitId 7.2.5 OS Microsoft Windows 10.0.22000 Platform Win32NT PSCompatibleVersions {1.0, 2.0, 3.0, 4.0\u2026} PSRemotingProtocolVersion 2.3 SerializationVersion 1.1.0.1 WSManStackVersion 3.0 Third Party PowerShell Modules Please refer to the report module user guide to check the system requirements for each report. Please follow the report module instructions to install any third party PowerShell modules which may be required. Install third party PowerShell modules # Install third party PowerShell module examples Install-Module -Name 'VMware.PowerCLI' -Scope 'CurrentUser' Install-Module -Name 'PureStoragePowerShellSDK' -Scope 'CurrentUser' Online Installation For an online installation, install As Built Report modules using the PowerShell Gallery ; Find and install As Built Report modules # Find AsBuiltReport modules published in the PowerShell Gallery Find-Module -Name 'AsBuiltReport.*' -Repository 'PSGallery' # Install AsBuiltReport module example Install-Module -Name 'AsBuiltReport.VMware.vSphere' -Scope 'CurrentUser' Offline Installation For an offline installation, perform the following steps from a machine with internet connectivity; Save the required modules to a specified folder. Find and save As Built Report modules # Find AsBuiltReport modules published in the PowerShell Gallery Find-Module -Name 'AsBuiltReport.*' -Repository 'PSGallery' # Save AsBuiltReport module example Save-Module -Name 'AsBuiltReport.VMware.vSphere' -Path 'C:\\Path\\To\\Specified\\Folder' Copy the downloaded PowerShell module folders to a location that can be made accessible to the offline system. e.g. USB Flash Drive, Internal File Share etc. On the offline system, open a PowerShell console window and run the following command to determine the PowerShell module path. Windows $env:PSModulePath -Split ';' macOS & Linux $env:PSModulePath -Split ':' Copy the downloaded PowerShell module folders to a folder specified in the $env:PSModulePath output.","title":"Installation"},{"location":"getting-started/installation/#powershell","text":"","title":"PowerShell"},{"location":"getting-started/installation/#system-requirements","text":"","title":"System Requirements"},{"location":"getting-started/installation/#powershell-version","text":"Open a PowerShell console and run the following command to determine your version of PowerShell. Check PowerShell version $PSVersionTable $PSVersionTable Sample Output Name Value PSVersion 7.2.5 PSEdition Core GitCommitId 7.2.5 OS Microsoft Windows 10.0.22000 Platform Win32NT PSCompatibleVersions {1.0, 2.0, 3.0, 4.0\u2026} PSRemotingProtocolVersion 2.3 SerializationVersion 1.1.0.1 WSManStackVersion 3.0","title":"PowerShell Version"},{"location":"getting-started/installation/#third-party-powershell-modules","text":"Please refer to the report module user guide to check the system requirements for each report. Please follow the report module instructions to install any third party PowerShell modules which may be required. Install third party PowerShell modules # Install third party PowerShell module examples Install-Module -Name 'VMware.PowerCLI' -Scope 'CurrentUser' Install-Module -Name 'PureStoragePowerShellSDK' -Scope 'CurrentUser'","title":"Third Party PowerShell Modules"},{"location":"getting-started/installation/#online-installation","text":"For an online installation, install As Built Report modules using the PowerShell Gallery ; Find and install As Built Report modules # Find AsBuiltReport modules published in the PowerShell Gallery Find-Module -Name 'AsBuiltReport.*' -Repository 'PSGallery' # Install AsBuiltReport module example Install-Module -Name 'AsBuiltReport.VMware.vSphere' -Scope 'CurrentUser'","title":"Online Installation"},{"location":"getting-started/installation/#offline-installation","text":"For an offline installation, perform the following steps from a machine with internet connectivity; Save the required modules to a specified folder. Find and save As Built Report modules # Find AsBuiltReport modules published in the PowerShell Gallery Find-Module -Name 'AsBuiltReport.*' -Repository 'PSGallery' # Save AsBuiltReport module example Save-Module -Name 'AsBuiltReport.VMware.vSphere' -Path 'C:\\Path\\To\\Specified\\Folder' Copy the downloaded PowerShell module folders to a location that can be made accessible to the offline system. e.g. USB Flash Drive, Internal File Share etc. On the offline system, open a PowerShell console window and run the following command to determine the PowerShell module path. Windows $env:PSModulePath -Split ';' macOS & Linux $env:PSModulePath -Split ':' Copy the downloaded PowerShell module folders to a folder specified in the $env:PSModulePath output.","title":"Offline Installation"},{"location":"support/donate/","text":"If you wish to show your support for this project, you may choose to make a donation below. All donations are greatly appreciated. Thank you! Donate","title":"Donate"},{"location":"support/faq/","text":"What is AsBuiltReport? As Built Report is an open source configuration document framework which utilises Microsoft PowerShell to produce as-built documentation in multiple document formats for multiple vendors and technologies. The framework allows users to easily generate clear and consistent documentation, for any environment which supports Microsoft PowerShell and/or a RESTful API. What versions of PowerShell are supported? AsBuiltReport will generally support both Windows PowerShell 5.1 and PowerShell 7, however each individual report will have its own system requirements. Please refer to the report module user guides for PowerShell compatibility and system requirements. What is PScribo? PScribo (pronounced 'skree-bo') is an open-source project created by Iain Brighton . PScribo provides a set of functions that make it easy to create a document-like structure within Powershell, without having to handle multiple output formats. A document's layout and contents only need to defined once regardless of target output format(s). What document formats are supported? DOCX (MS Word), HTML & Text are all supported document formats. Do I need Microsoft Word installed to generate a report in DOCX format? No. Microsoft Word is not required to generate the report, however a document viewer which supports the DOCX format would be required to view the report. How do I install AsBuiltReport if I do not have access to PowerShell Gallery? Please refer to the installation page for instructions on how to perform an offline installation of AsBuiltReport. How can I contribute to the project? Please refer to the contributing page. How can I donate to the project? Please refer to the donate page. How can I provide feedback or ask for help? Please refer to the contact page.","title":"FAQ"},{"location":"support/faq/#what-is-asbuiltreport","text":"As Built Report is an open source configuration document framework which utilises Microsoft PowerShell to produce as-built documentation in multiple document formats for multiple vendors and technologies. The framework allows users to easily generate clear and consistent documentation, for any environment which supports Microsoft PowerShell and/or a RESTful API.","title":"What is AsBuiltReport?"},{"location":"support/faq/#what-versions-of-powershell-are-supported","text":"AsBuiltReport will generally support both Windows PowerShell 5.1 and PowerShell 7, however each individual report will have its own system requirements. Please refer to the report module user guides for PowerShell compatibility and system requirements.","title":"What versions of PowerShell are supported?"},{"location":"support/faq/#what-is-pscribo","text":"PScribo (pronounced 'skree-bo') is an open-source project created by Iain Brighton . PScribo provides a set of functions that make it easy to create a document-like structure within Powershell, without having to handle multiple output formats. A document's layout and contents only need to defined once regardless of target output format(s).","title":"What is PScribo?"},{"location":"support/faq/#what-document-formats-are-supported","text":"DOCX (MS Word), HTML & Text are all supported document formats.","title":"What document formats are supported?"},{"location":"support/faq/#do-i-need-microsoft-word-installed-to-generate-a-report-in-docx-format","text":"No. Microsoft Word is not required to generate the report, however a document viewer which supports the DOCX format would be required to view the report.","title":"Do I need Microsoft Word installed to generate a report in DOCX format?"},{"location":"support/faq/#how-do-i-install-asbuiltreport-if-i-do-not-have-access-to-powershell-gallery","text":"Please refer to the installation page for instructions on how to perform an offline installation of AsBuiltReport.","title":"How do I install AsBuiltReport if I do not have access to PowerShell Gallery?"},{"location":"support/faq/#how-can-i-contribute-to-the-project","text":"Please refer to the contributing page.","title":"How can I contribute to the project?"},{"location":"support/faq/#how-can-i-donate-to-the-project","text":"Please refer to the donate page.","title":"How can I donate to the project?"},{"location":"support/faq/#how-can-i-provide-feedback-or-ask-for-help","text":"Please refer to the contact page.","title":"How can I provide feedback or ask for help?"},{"location":"user-guide/known-issues/","text":"This section provides information relating to common and/or known issues when generating an As Built Report. Table Of Contents (TOC) is missing in Word formatted report Attention When opening a Microsoft Word (DOCX) report for the first time, you will be prompted with the following warning; Clicking No will prevent the TOC fields from being updated, leaving the Table of Contents empty. Always reply Yes to this message when prompted by Microsoft Word to ensure the Table of Contents is updated. Save the document to prevent future prompts when opening the document. Images are missing from reports generated using Linux or macOS Not Supported Unfortunately due to breaking changes in .NET 6, images are no longer supported for reports generated using Linux or macOS. For issues related to individual reports, please refer to the report documentation pages or the relevent report GitHub repository .","title":"Known Issues"},{"location":"user-guide/known-issues/#table-of-contents-toc-is-missing-in-word-formatted-report","text":"Attention When opening a Microsoft Word (DOCX) report for the first time, you will be prompted with the following warning; Clicking No will prevent the TOC fields from being updated, leaving the Table of Contents empty. Always reply Yes to this message when prompted by Microsoft Word to ensure the Table of Contents is updated. Save the document to prevent future prompts when opening the document.","title":"Table Of Contents (TOC) is missing in Word formatted report"},{"location":"user-guide/known-issues/#images-are-missing-from-reports-generated-using-linux-or-macos","text":"Not Supported Unfortunately due to breaking changes in .NET 6, images are no longer supported for reports generated using Linux or macOS. For issues related to individual reports, please refer to the report documentation pages or the relevent report GitHub repository .","title":"Images are missing from reports generated using Linux or macOS"},{"location":"user-guide/new-asbuiltconfig/","text":"Description New-AsBuiltConfig starts a menu-driven procedure in the PowerShell console asking the user a series of questions to create a JSON configuration file. The JSON configuration file may be saved and referenced by the AsBuiltConfigPath parameter in New-AsBuiltReport . New-AsBuiltConfig is automatically called by New-AsBuiltReport if the AsBuiltConfigPath parameter is not specified. If a user wishes to generate a new As Built Report configuration without generating a new report, this command can be called as a standalone cmdlet. Parameters There are no additional parameters for this command. Examples Starts a menu-driven procedure to create an As Built Report configuration file. Example 1 New-AsBuiltConfig New-AsBuiltConfig Sample Output As Built Report Information Enter the name of the Author for this As Built Report [Tim]: Tim Carman Company Information Would you like to enter Company information for the As Built Report? (y/n): y Enter the Full Company Name: ACME Inc Enter the Company Short Name: ACME Enter the Company Contact: Wile E. Coyote Enter the Company Email Address: wile.e.coyote@acme.inc Enter the Company Phone: 555-555-5555 Enter the Company Address: 1 Looney Tunes Street Email Configuration Would you like to enter SMTP configuration? (y/n): y Enter the mail server FQDN / IP address: 172.16.10.30 Enter the mail server port number [25]: 25 Use SSL for mail server connection? (true/false): true Require mail server authentication? (true/false): false Enter the mail sender address: support@asbuiltreport.com Enter the mail server recipient address: wile.e.coyote@acme.inc Do you want to enter another recipient? (y/n): n Enter the email message body content: As Built Report attached As Built Report Configuration Would you like to save the As Built Report configuration file? (y/n): y Enter a name for the As Built Report configuration file [AsBuiltReport]: ACME Enter the path to save the As Built Report configuration file [C:\\Users\\Tim\\AsBuiltReport]: C:\\Documents\\Clients\\ACME\\AsBuiltReport Name Value Email {Port, Server, Body, UseSSL\u2026} UserFolder {Path} Company {ShortName, Phone, Contact, Email\u2026} Report {Author} New-AsBuiltConfig Sample JSON Configuration { \"Email\" : { \"Port\" : \"25\" , \"Server\" : \"172.16.10.30\" , \"Body\" : \"As Built Report attached\" , \"UseSSL\" : true , \"To\" : [ \"wile.e.coyote@acme.inc\" ], \"Credentials\" : false , \"From\" : \"support@asbuiltreport.com\" }, \"UserFolder\" : { \"Path\" : \"C:\\\\Documents\\\\Clients\\\\ACME\\\\AsBuiltReport\" }, \"Company\" : { \"ShortName\" : \"ACME\" , \"Phone\" : \"555-555-5555\" , \"Contact\" : \"Wile E. Coyote\" , \"Email\" : \"wile.e.coyote@acme.inc\" , \"Address\" : \"1 Looney Tunes Street\" , \"FullName\" : \"ACME Inc\" }, \"Report\" : { \"Author\" : \"Tim Carman\" } }","title":"New-AsBuiltConfig"},{"location":"user-guide/new-asbuiltconfig/#description","text":"New-AsBuiltConfig starts a menu-driven procedure in the PowerShell console asking the user a series of questions to create a JSON configuration file. The JSON configuration file may be saved and referenced by the AsBuiltConfigPath parameter in New-AsBuiltReport . New-AsBuiltConfig is automatically called by New-AsBuiltReport if the AsBuiltConfigPath parameter is not specified. If a user wishes to generate a new As Built Report configuration without generating a new report, this command can be called as a standalone cmdlet.","title":"Description"},{"location":"user-guide/new-asbuiltconfig/#parameters","text":"There are no additional parameters for this command.","title":"Parameters"},{"location":"user-guide/new-asbuiltconfig/#examples","text":"Starts a menu-driven procedure to create an As Built Report configuration file. Example 1 New-AsBuiltConfig New-AsBuiltConfig Sample Output As Built Report Information Enter the name of the Author for this As Built Report [Tim]: Tim Carman Company Information Would you like to enter Company information for the As Built Report? (y/n): y Enter the Full Company Name: ACME Inc Enter the Company Short Name: ACME Enter the Company Contact: Wile E. Coyote Enter the Company Email Address: wile.e.coyote@acme.inc Enter the Company Phone: 555-555-5555 Enter the Company Address: 1 Looney Tunes Street Email Configuration Would you like to enter SMTP configuration? (y/n): y Enter the mail server FQDN / IP address: 172.16.10.30 Enter the mail server port number [25]: 25 Use SSL for mail server connection? (true/false): true Require mail server authentication? (true/false): false Enter the mail sender address: support@asbuiltreport.com Enter the mail server recipient address: wile.e.coyote@acme.inc Do you want to enter another recipient? (y/n): n Enter the email message body content: As Built Report attached As Built Report Configuration Would you like to save the As Built Report configuration file? (y/n): y Enter a name for the As Built Report configuration file [AsBuiltReport]: ACME Enter the path to save the As Built Report configuration file [C:\\Users\\Tim\\AsBuiltReport]: C:\\Documents\\Clients\\ACME\\AsBuiltReport Name Value Email {Port, Server, Body, UseSSL\u2026} UserFolder {Path} Company {ShortName, Phone, Contact, Email\u2026} Report {Author} New-AsBuiltConfig Sample JSON Configuration { \"Email\" : { \"Port\" : \"25\" , \"Server\" : \"172.16.10.30\" , \"Body\" : \"As Built Report attached\" , \"UseSSL\" : true , \"To\" : [ \"wile.e.coyote@acme.inc\" ], \"Credentials\" : false , \"From\" : \"support@asbuiltreport.com\" }, \"UserFolder\" : { \"Path\" : \"C:\\\\Documents\\\\Clients\\\\ACME\\\\AsBuiltReport\" }, \"Company\" : { \"ShortName\" : \"ACME\" , \"Phone\" : \"555-555-5555\" , \"Contact\" : \"Wile E. Coyote\" , \"Email\" : \"wile.e.coyote@acme.inc\" , \"Address\" : \"1 Looney Tunes Street\" , \"FullName\" : \"ACME Inc\" }, \"Report\" : { \"Author\" : \"Tim Carman\" } }","title":"Examples"},{"location":"user-guide/new-asbuiltreport/","text":"Description New-AsBuiltReport creates as-built configuration reports for one or more target systems and exports the report in to one or more supported document formats, such as DOCX, HTML and Text. New-AsBuiltReport provides additional parameters, allowing users to generate and customise a report to their requirements. Parameters Report Specifies the type of report that will be generated. This is a mandatory parameter. Target Specifies the IP/FQDN of the system to connect. This is a mandatory parameter. Credential Specifies the stored credential of the target system. This is a mandatory parameter. Username Specifies the username of the target system. This is a mandatory parameter. Password Specifies the password of the target system. This is a mandatory parameter. Token Specifies an API token to authenticate to the target system. This is an optional parameter. MFA Use multifactor authentication to authenticate to the target system. This is an optional parameter. Format Specifies the output format of the report. The supported output formats are Word, HTML & Text. Multiple output formats may be specified, separated by a comma. This is an optional parameter. If the parameter is not specified, the document format will default to Word. Orientation Sets the page orientation of the report to Portrait or Landscape. This is an optional parameter. If the parameter is not specified, page orientation will be set to Portrait. StyleFilePath Specifies the file path to a custom style .ps1 script for the report to use. This is an optional parameter and does not have a default value. OutputFolderPath Specifies the folder path to save the report. This is a mandatory parameter. AsBuiltConfigFilePath Specifies the file path to the As Built Report configuration JSON file. This is an optional parameter. If this parameter is not specified, the user will be prompted for this configuration information on first run, with the option to save the configuration to a file. ReportConfigFilePath Specifies the file path to a report JSON configuration file. This is an optional parameter. If this parameter is not specified, a default report configuration JSON is copied to the specified user folder. If this parameter is specified and the path to a JSON file is invalid, the script will terminate. Timestamp Specifies whether to append a timestamp string to the report filename. This is an optional parameter. By default, the timestamp string is not added to the report filename. EnableHealthcheck Highlights certain issues within the system report. Some reports may not provide this functionality. This is an optional parameter. If the parameter is not specified, health checks are not enabled. SendEmail Sends report to specified recipients as email attachments. This is an optional parameter. Examples Creates an as-built report for a VMware vSphere environment. The report is generated in Word and Text formats and saved to the C:\\Reports folder. Health checks will be enabled for the report. Example 1 New-AsBuiltReport -Report 'VMware.vSphere' -Target 'vcenter.domain.local' ` -Username 'administrator@vsphere.local' -Password 'VMware1!' ` -Format 'Word' , 'Text' -OutputFolderPath 'C:\\Reports' -EnableHealthCheck Creates an as-built report for two Pure Storage FlashArrays. The report is generated in HTML format, saved to the C:\\Reports folder and sent via email. Example 2 New-AsBuiltReport -Report 'PureStorage.FlashArray' -Target '192.168.10.100' , '192.168.10.110' ` -Credential ( Get-Credential ) -Format 'HTML' -OutputFolderPath 'C:\\Reports' -SendEmail Creates an as-built report for two VMware ESXi hosts. Authentication to VMware ESXi hosts uses stored credentials. The report is generated in Word (DOCX) format (by default). A customized stylesheet is specified to style the report in the company\u2019s brand colours and fonts. The report is saved to the user\u2019s documents folder with a timestamp appended to the filename to identify when the report was generated. The AsBuiltConfigFilePath parameter is specified to bypass the menu driven questionnaire. Example 3 New-AsBuiltReport -Report 'VMware.ESXi' -Target 'corp-esxi01' , 'corp-esxi02' ` -Credential $creds -OutputFolderPath \"$env:USERPROFILE\\Documents\" ` -StyleFilePath 'C:\\AsBuiltReport\\MyCompanyStyle.ps1' ` -AsBuiltConfigFilePath 'C:\\AsBuiltReport\\MyCompanyConfig.json' -Timestamp","title":"New-AsBuiltReport"},{"location":"user-guide/new-asbuiltreport/#description","text":"New-AsBuiltReport creates as-built configuration reports for one or more target systems and exports the report in to one or more supported document formats, such as DOCX, HTML and Text. New-AsBuiltReport provides additional parameters, allowing users to generate and customise a report to their requirements.","title":"Description"},{"location":"user-guide/new-asbuiltreport/#parameters","text":"","title":"Parameters"},{"location":"user-guide/new-asbuiltreport/#report","text":"Specifies the type of report that will be generated. This is a mandatory parameter.","title":"Report"},{"location":"user-guide/new-asbuiltreport/#target","text":"Specifies the IP/FQDN of the system to connect. This is a mandatory parameter.","title":"Target"},{"location":"user-guide/new-asbuiltreport/#credential","text":"Specifies the stored credential of the target system. This is a mandatory parameter.","title":"Credential"},{"location":"user-guide/new-asbuiltreport/#username","text":"Specifies the username of the target system. This is a mandatory parameter.","title":"Username"},{"location":"user-guide/new-asbuiltreport/#password","text":"Specifies the password of the target system. This is a mandatory parameter.","title":"Password"},{"location":"user-guide/new-asbuiltreport/#token","text":"Specifies an API token to authenticate to the target system. This is an optional parameter.","title":"Token"},{"location":"user-guide/new-asbuiltreport/#mfa","text":"Use multifactor authentication to authenticate to the target system. This is an optional parameter.","title":"MFA"},{"location":"user-guide/new-asbuiltreport/#format","text":"Specifies the output format of the report. The supported output formats are Word, HTML & Text. Multiple output formats may be specified, separated by a comma. This is an optional parameter. If the parameter is not specified, the document format will default to Word.","title":"Format"},{"location":"user-guide/new-asbuiltreport/#orientation","text":"Sets the page orientation of the report to Portrait or Landscape. This is an optional parameter. If the parameter is not specified, page orientation will be set to Portrait.","title":"Orientation"},{"location":"user-guide/new-asbuiltreport/#stylefilepath","text":"Specifies the file path to a custom style .ps1 script for the report to use. This is an optional parameter and does not have a default value.","title":"StyleFilePath"},{"location":"user-guide/new-asbuiltreport/#outputfolderpath","text":"Specifies the folder path to save the report. This is a mandatory parameter.","title":"OutputFolderPath"},{"location":"user-guide/new-asbuiltreport/#asbuiltconfigfilepath","text":"Specifies the file path to the As Built Report configuration JSON file. This is an optional parameter. If this parameter is not specified, the user will be prompted for this configuration information on first run, with the option to save the configuration to a file.","title":"AsBuiltConfigFilePath"},{"location":"user-guide/new-asbuiltreport/#reportconfigfilepath","text":"Specifies the file path to a report JSON configuration file. This is an optional parameter. If this parameter is not specified, a default report configuration JSON is copied to the specified user folder. If this parameter is specified and the path to a JSON file is invalid, the script will terminate.","title":"ReportConfigFilePath"},{"location":"user-guide/new-asbuiltreport/#timestamp","text":"Specifies whether to append a timestamp string to the report filename. This is an optional parameter. By default, the timestamp string is not added to the report filename.","title":"Timestamp"},{"location":"user-guide/new-asbuiltreport/#enablehealthcheck","text":"Highlights certain issues within the system report. Some reports may not provide this functionality. This is an optional parameter. If the parameter is not specified, health checks are not enabled.","title":"EnableHealthcheck"},{"location":"user-guide/new-asbuiltreport/#sendemail","text":"Sends report to specified recipients as email attachments. This is an optional parameter.","title":"SendEmail"},{"location":"user-guide/new-asbuiltreport/#examples","text":"Creates an as-built report for a VMware vSphere environment. The report is generated in Word and Text formats and saved to the C:\\Reports folder. Health checks will be enabled for the report. Example 1 New-AsBuiltReport -Report 'VMware.vSphere' -Target 'vcenter.domain.local' ` -Username 'administrator@vsphere.local' -Password 'VMware1!' ` -Format 'Word' , 'Text' -OutputFolderPath 'C:\\Reports' -EnableHealthCheck Creates an as-built report for two Pure Storage FlashArrays. The report is generated in HTML format, saved to the C:\\Reports folder and sent via email. Example 2 New-AsBuiltReport -Report 'PureStorage.FlashArray' -Target '192.168.10.100' , '192.168.10.110' ` -Credential ( Get-Credential ) -Format 'HTML' -OutputFolderPath 'C:\\Reports' -SendEmail Creates an as-built report for two VMware ESXi hosts. Authentication to VMware ESXi hosts uses stored credentials. The report is generated in Word (DOCX) format (by default). A customized stylesheet is specified to style the report in the company\u2019s brand colours and fonts. The report is saved to the user\u2019s documents folder with a timestamp appended to the filename to identify when the report was generated. The AsBuiltConfigFilePath parameter is specified to bypass the menu driven questionnaire. Example 3 New-AsBuiltReport -Report 'VMware.ESXi' -Target 'corp-esxi01' , 'corp-esxi02' ` -Credential $creds -OutputFolderPath \"$env:USERPROFILE\\Documents\" ` -StyleFilePath 'C:\\AsBuiltReport\\MyCompanyStyle.ps1' ` -AsBuiltConfigFilePath 'C:\\AsBuiltReport\\MyCompanyConfig.json' -Timestamp","title":"Examples"},{"location":"user-guide/new-asbuiltreportconfig/","text":"Description New-AsBuiltReportConfig creates JSON configuration files for individual As Built Reports. Parameters Report Specifies the type of report configuration to create. This is a mandatory parameter. Folderpath Specifies the folder path to create the report JSON configuration file. This is a mandatory parameter. Filename Specifies the filename of the report JSON configuration file. If a filename is not specified, a JSON configuration file will be created with a default filename AsBuiltReport.<Vendor>.<Product>.json This is an optional parameter. Force Specifies to overwrite an existing JSON configuration. This is an optional parameter. Examples Creates a new NetApp ONTAP report JSON configuration file in the C:\\Reports folder. Example 1 New-AsBuiltReportConfig -Report 'NetApp.ONTAP' -Folderpath 'C:\\Reports' Creates a new Microsoft Active Directory report JSON configuration file named ACME.json in the C:\\Reports folder. Example 2 New-AsBuiltReportConfig -Report 'Microsoft.AD' -Filename 'ACME' -Folderpath 'C:\\AsBuiltReport' Creates a new VMware vSphere report JSON configuration file in the C:\\Reports folder, and overwrites the existing AsBuiltReport.VMware.vSphere.json file. Example 3 New-AsBuiltReportConfig -Report 'VMware.vSphere' -Folderpath 'C:\\Reports' -Force Sample VMware vSphere Report JSON Configuration { \"Report\" : { // The Report schema provides configuration of the report information. \"Name\" : \"VMware vSphere As Built Report\" , // The name of the As Built Report \"Version\" : \"1.0\" , // The report version \"Status\" : \"Released\" , // The report release status \"ShowCoverPageImage\" : true , // Toggle to enable/disable the display of the cover page image \"ShowTableOfContents\" : true , // Toggle to enable/disable table of contents \"ShowHeaderFooter\" : true , // Toggle to enable/disable document headers & footers \"ShowTableCaptions\" : true // Toggle to enable/disable table captions/numbering }, \"Options\" : { // The Options schema allows certain options within the report to be toggled on or off. \"ShowLicenseKeys\" : false , // Toggle to mask/unmask vSphere license keys \"ShowVMSnapshots\" : true , // Toggle to enable/disable reporting of VM snapshots }, \"InfoLevel\" : { // The InfoLevel schema allows configuration of each section of the report at a granular level. \"_comment_\" : \"0 = Disabled, 1 = Enabled / Summary, 2 = Adv Summary, 3 = Detailed, 4 = Adv Detailed, 5 = Comprehensive\" , \"vCenter\" : 3 , \"Cluster\" : 3 , \"ResourcePool\" : 3 , \"VMHost\" : 3 , \"Network\" : 3 , \"vSAN\" : 3 , \"Datastore\" : 3 , \"DSCluster\" : 3 , \"VM\" : 2 , \"VUM\" : 3 }, \"HealthCheck\" : { // The Healthcheck schema is used to toggle health checks on or off. \"vCenter\" : { \"Mail\" : true , \"Licensing\" : true , \"Alarms\" : true }, \"Cluster\" : { \"HAEnabled\" : true , \"HAAdmissionControl\" : true , \"HostFailureResponse\" : true , \"HostMonitoring\" : true , \"DatastoreOnPDL\" : true , \"DatastoreOnAPD\" : true , \"APDTimeOut\" : true , \"vmMonitoring\" : true , \"DRSEnabled\" : true , \"DRSAutomationLevelFullyAuto\" : true , \"PredictiveDRS\" : false , \"DRSVMHostRules\" : true , \"DRSRules\" : true , \"vSANEnabled\" : false , \"EVCEnabled\" : true , \"VUMCompliance\" : true }, \"VMHost\" : { \"ConnectionState\" : true , \"HyperThreading\" : true , \"ScratchLocation\" : true , \"IPv6\" : true , \"UpTimeDays\" : true , \"Licensing\" : true , \"Certificates\" : true , \"SSH\" : true , \"ESXiShell\" : true , \"NTP\" : true , \"StorageAdapter\" : true , \"NetworkAdapter\" : true , \"LockdownMode\" : true , \"VUMCompliance\" : true }, \"vSAN\" : {}, \"Datastore\" : { \"CapacityUtilization\" : true }, \"DSCluster\" : { \"CapacityUtilization\" : true , \"SDRSAutomationLevelFullyAuto\" : true }, \"VM\" : { \"PowerState\" : true , \"ConnectionState\" : true , \"CpuHotAdd\" : true , \"CpuHotRemove\" : true , \"MemoryHotAdd\" : true , \"ChangeBlockTracking\" : true , \"SpbmPolicyCompliance\" : true , \"VMToolsStatus\" : true , \"VMSnapshots\" : true } } }","title":"New-AsBuiltReportConfig"},{"location":"user-guide/new-asbuiltreportconfig/#description","text":"New-AsBuiltReportConfig creates JSON configuration files for individual As Built Reports.","title":"Description"},{"location":"user-guide/new-asbuiltreportconfig/#parameters","text":"","title":"Parameters"},{"location":"user-guide/new-asbuiltreportconfig/#report","text":"Specifies the type of report configuration to create. This is a mandatory parameter.","title":"Report"},{"location":"user-guide/new-asbuiltreportconfig/#folderpath","text":"Specifies the folder path to create the report JSON configuration file. This is a mandatory parameter.","title":"Folderpath"},{"location":"user-guide/new-asbuiltreportconfig/#filename","text":"Specifies the filename of the report JSON configuration file. If a filename is not specified, a JSON configuration file will be created with a default filename AsBuiltReport.<Vendor>.<Product>.json This is an optional parameter.","title":"Filename"},{"location":"user-guide/new-asbuiltreportconfig/#force","text":"Specifies to overwrite an existing JSON configuration. This is an optional parameter.","title":"Force"},{"location":"user-guide/new-asbuiltreportconfig/#examples","text":"Creates a new NetApp ONTAP report JSON configuration file in the C:\\Reports folder. Example 1 New-AsBuiltReportConfig -Report 'NetApp.ONTAP' -Folderpath 'C:\\Reports' Creates a new Microsoft Active Directory report JSON configuration file named ACME.json in the C:\\Reports folder. Example 2 New-AsBuiltReportConfig -Report 'Microsoft.AD' -Filename 'ACME' -Folderpath 'C:\\AsBuiltReport' Creates a new VMware vSphere report JSON configuration file in the C:\\Reports folder, and overwrites the existing AsBuiltReport.VMware.vSphere.json file. Example 3 New-AsBuiltReportConfig -Report 'VMware.vSphere' -Folderpath 'C:\\Reports' -Force Sample VMware vSphere Report JSON Configuration { \"Report\" : { // The Report schema provides configuration of the report information. \"Name\" : \"VMware vSphere As Built Report\" , // The name of the As Built Report \"Version\" : \"1.0\" , // The report version \"Status\" : \"Released\" , // The report release status \"ShowCoverPageImage\" : true , // Toggle to enable/disable the display of the cover page image \"ShowTableOfContents\" : true , // Toggle to enable/disable table of contents \"ShowHeaderFooter\" : true , // Toggle to enable/disable document headers & footers \"ShowTableCaptions\" : true // Toggle to enable/disable table captions/numbering }, \"Options\" : { // The Options schema allows certain options within the report to be toggled on or off. \"ShowLicenseKeys\" : false , // Toggle to mask/unmask vSphere license keys \"ShowVMSnapshots\" : true , // Toggle to enable/disable reporting of VM snapshots }, \"InfoLevel\" : { // The InfoLevel schema allows configuration of each section of the report at a granular level. \"_comment_\" : \"0 = Disabled, 1 = Enabled / Summary, 2 = Adv Summary, 3 = Detailed, 4 = Adv Detailed, 5 = Comprehensive\" , \"vCenter\" : 3 , \"Cluster\" : 3 , \"ResourcePool\" : 3 , \"VMHost\" : 3 , \"Network\" : 3 , \"vSAN\" : 3 , \"Datastore\" : 3 , \"DSCluster\" : 3 , \"VM\" : 2 , \"VUM\" : 3 }, \"HealthCheck\" : { // The Healthcheck schema is used to toggle health checks on or off. \"vCenter\" : { \"Mail\" : true , \"Licensing\" : true , \"Alarms\" : true }, \"Cluster\" : { \"HAEnabled\" : true , \"HAAdmissionControl\" : true , \"HostFailureResponse\" : true , \"HostMonitoring\" : true , \"DatastoreOnPDL\" : true , \"DatastoreOnAPD\" : true , \"APDTimeOut\" : true , \"vmMonitoring\" : true , \"DRSEnabled\" : true , \"DRSAutomationLevelFullyAuto\" : true , \"PredictiveDRS\" : false , \"DRSVMHostRules\" : true , \"DRSRules\" : true , \"vSANEnabled\" : false , \"EVCEnabled\" : true , \"VUMCompliance\" : true }, \"VMHost\" : { \"ConnectionState\" : true , \"HyperThreading\" : true , \"ScratchLocation\" : true , \"IPv6\" : true , \"UpTimeDays\" : true , \"Licensing\" : true , \"Certificates\" : true , \"SSH\" : true , \"ESXiShell\" : true , \"NTP\" : true , \"StorageAdapter\" : true , \"NetworkAdapter\" : true , \"LockdownMode\" : true , \"VUMCompliance\" : true }, \"vSAN\" : {}, \"Datastore\" : { \"CapacityUtilization\" : true }, \"DSCluster\" : { \"CapacityUtilization\" : true , \"SDRSAutomationLevelFullyAuto\" : true }, \"VM\" : { \"PowerState\" : true , \"ConnectionState\" : true , \"CpuHotAdd\" : true , \"CpuHotRemove\" : true , \"MemoryHotAdd\" : true , \"ChangeBlockTracking\" : true , \"SpbmPolicyCompliance\" : true , \"VMToolsStatus\" : true , \"VMSnapshots\" : true } } }","title":"Examples"},{"location":"user-guide/report-modules/overview/","text":"Please use the left sidebar to reference links to information about each individual report module.","title":"Overview"}]}